@page "/details/{ProductId:int}"
@inject IProductService _productService

@if (IsProcessing)
{
    <div style="position:fixed;top:50%;left:50%;margin-top:-50px;margin-left:-100px;">
        <img src="images/ajax-loader.gif" />
    </div>
}
else
{
    <EditForm OnValidSubmit="AddToCart" Model="DetailsVM" method="post">
        <DataAnnotationsValidator />
        <div class="card container mt-4">
            <div class="card-header ml-0 row">
                <div class="col-12 col-md-6">
                    <h1 class="text-primary"><strong>@Product.Brand</strong> @Product.Name</h1>
                </div>
                <div class="col-12 col-md-6 text-end pt-4">
                    <span class="badge bg-info pt-2" style="height:30px;">@Product.Category.Name</span>
                    <span class="badge bg-warning pt-2" style="height:30px;">@Product.Color</span>
                </div>
            </div>
            <div class="card-body">
                <div class="container rounded p-2">
                    <div class="row">
                        <div class="col-10">
                            <p>@((MarkupString)Product.Description)</p>
                            <div class="row">
                                @foreach (var productPrice in Product.ProductPrices)
                                {
                                    @if (productPrice.Id == DetailsVM.SelectedProductPriceId)
                                    {
                                        // This product is currently selected by the user so change the button color
                                        <div class="col-2 bg-light text-center pt-2 m-2" 
                                             style="border:3px solid #28A745; border-radius:10px;box-shadow:5px">
                                            <p>@productPrice.Size</p>
                                            <p>@productPrice.Price.ToString("C")</p>
                                        </div>
                                    }
                                    else
                                    {
                                        // Unselected products
                                        <div class="col-2 bg-light text-center pt-2 m-2" 
                                            @onclick="(args) => SelectedProductPrice(args, productPrice.Id)" 
                                            style="border:1px solid; border-radius:10px;box-shadow:5px">
                                            <p>@productPrice.Size</p>
                                            <p>@productPrice.Price.ToString("C")</p>
                                        </div>
                                    }
                                }
                                @if (!Product.ProductPrices.Any())
                                {
                                    <p class="text-warning">No sizes currently available.</p>
                                }
                                else
                                {
                                    <div class="row pl-2 pt-2">
                                        <div class="col-2 text-primary"><h5>Count:</h5></div>
                                        <div class="col-10">
                                            <InputNumber @bind-Value="DetailsVM.Count" class="form-control" />
                                            <ValidationMessage For="() => DetailsVM.Count"></ValidationMessage>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="col-2">
                            <img src="@Product.ImageUrl" class="rounded w-100" />
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="row">
                        <div class="col-12 col-md-6 pb-1">
                            <a class="btn btn-success form-control " href="/">All Products</a>
                        </div>
                        <div class="col-12 col-md-6 pb-1">
                            @if (DetailsVM.SelectedProductPriceId > 0)
                            {
                                // Item has been selected
                                <button type="submit" value="Add to Cart" class="btn btn-primary form-control">
                                    Add to Cart
                                </button>
                            }
                            else
                            {
                                <button type="submit" value="Add to Cart" class="btn btn-primary form-control" disabled>
                                    Add to Cart
                                </button>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </EditForm>
}

@code {
    [Parameter]
    public int ProductId { get; set; }
    public ProductDTO Product { get; set; } = new();
    public DetailsVM DetailsVM { get; set; } = new();
    public bool IsProcessing = false;

    protected override async Task OnInitializedAsync()
    {
        IsProcessing = true;

        /* Use CLIENT project's ProductService to call the API project's ProductController, which makes a 
           call to the DATA project's ProductRepository, which retrieves Product data from the SERVER */
        Product = await _productService.Get(ProductId);

        IsProcessing = false;
    }

    private async Task SelectedProductPrice(MouseEventArgs args, int productPriceId)
    {
        DetailsVM.ProductPrice = Product.ProductPrices.FirstOrDefault(p => p.Id == productPriceId);
        DetailsVM.SelectedProductPriceId = productPriceId;
    }


    private async Task AddToCart()
    {
        
    }
}
